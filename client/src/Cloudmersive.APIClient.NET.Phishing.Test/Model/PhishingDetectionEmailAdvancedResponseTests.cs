/*
 * phishingapi
 *
 * Easily and directly scan and block phishing security threats in input.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Cloudmersive.APIClient.NET.Phishing.Model;
using Cloudmersive.APIClient.NET.Phishing.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Cloudmersive.APIClient.NET.Phishing.Test.Model
{
    /// <summary>
    ///  Class for testing PhishingDetectionEmailAdvancedResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PhishingDetectionEmailAdvancedResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PhishingDetectionEmailAdvancedResponse
        //private PhishingDetectionEmailAdvancedResponse instance;

        public PhishingDetectionEmailAdvancedResponseTests()
        {
            // TODO uncomment below to create an instance of PhishingDetectionEmailAdvancedResponse
            //instance = new PhishingDetectionEmailAdvancedResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PhishingDetectionEmailAdvancedResponse
        /// </summary>
        [Fact]
        public void PhishingDetectionEmailAdvancedResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" PhishingDetectionEmailAdvancedResponse
            //Assert.IsType<PhishingDetectionEmailAdvancedResponse>(instance);
        }

        /// <summary>
        /// Test the property 'CleanResult'
        /// </summary>
        [Fact]
        public void CleanResultTest()
        {
            // TODO unit test for the property 'CleanResult'
        }

        /// <summary>
        /// Test the property 'PhishingRiskLevel'
        /// </summary>
        [Fact]
        public void PhishingRiskLevelTest()
        {
            // TODO unit test for the property 'PhishingRiskLevel'
        }

        /// <summary>
        /// Test the property 'SpamRiskLevel'
        /// </summary>
        [Fact]
        public void SpamRiskLevelTest()
        {
            // TODO unit test for the property 'SpamRiskLevel'
        }

        /// <summary>
        /// Test the property 'ContainsLowReputationSender'
        /// </summary>
        [Fact]
        public void ContainsLowReputationSenderTest()
        {
            // TODO unit test for the property 'ContainsLowReputationSender'
        }

        /// <summary>
        /// Test the property 'ContainsPhishing'
        /// </summary>
        [Fact]
        public void ContainsPhishingTest()
        {
            // TODO unit test for the property 'ContainsPhishing'
        }

        /// <summary>
        /// Test the property 'ContainsSpam'
        /// </summary>
        [Fact]
        public void ContainsSpamTest()
        {
            // TODO unit test for the property 'ContainsSpam'
        }

        /// <summary>
        /// Test the property 'ContainsUnsolicitedSales'
        /// </summary>
        [Fact]
        public void ContainsUnsolicitedSalesTest()
        {
            // TODO unit test for the property 'ContainsUnsolicitedSales'
        }

        /// <summary>
        /// Test the property 'ContainsPromotionalContent'
        /// </summary>
        [Fact]
        public void ContainsPromotionalContentTest()
        {
            // TODO unit test for the property 'ContainsPromotionalContent'
        }

        /// <summary>
        /// Test the property 'ContainsPhishingAttempt'
        /// </summary>
        [Fact]
        public void ContainsPhishingAttemptTest()
        {
            // TODO unit test for the property 'ContainsPhishingAttempt'
        }

        /// <summary>
        /// Test the property 'AnalysisRationale'
        /// </summary>
        [Fact]
        public void AnalysisRationaleTest()
        {
            // TODO unit test for the property 'AnalysisRationale'
        }
    }
}
