/*
 * phishingapi
 *
 * Easily and directly scan and block phishing security threats in input.
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Cloudmersive.APIClient.NET.Phishing.Client;
using Cloudmersive.APIClient.NET.Phishing.Model;

namespace Cloudmersive.APIClient.NET.Phishing.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPhishingDetectionApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Perform advanced AI phishing detection and classification against input email.  Analyzes input email as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected.
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PhishingDetectionEmailAdvancedResponse</returns>
        PhishingDetectionEmailAdvancedResponse PhishingDetectEmailAdvancedPost(AdvancedEmailDetectionRequest body = default(AdvancedEmailDetectionRequest), int operationIndex = 0);

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input email.  Analyzes input email as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PhishingDetectionEmailAdvancedResponse</returns>
        ApiResponse<PhishingDetectionEmailAdvancedResponse> PhishingDetectEmailAdvancedPostWithHttpInfo(AdvancedEmailDetectionRequest body = default(AdvancedEmailDetectionRequest), int operationIndex = 0);
        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected.
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model"> (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PhishingDetectionAdvancedResponse</returns>
        PhishingDetectionAdvancedResponse PhishingDetectFileAdvancedPost(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0);

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model"> (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PhishingDetectionAdvancedResponse</returns>
        ApiResponse<PhishingDetectionAdvancedResponse> PhishingDetectFileAdvancedPostWithHttpInfo(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0);
        /// <summary>
        /// Perform AI phishing detection and classification on an input image or document (PDF or DOCX).  Analyzes input content as well as embedded URLs with AI deep learnign to detect phishing and other unsafe content.  Uses 100-125 API calls depending on model selected.
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model">Model to use; default setting is Advanced (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PhishingDetectionResponse</returns>
        PhishingDetectionResponse PhishingDetectFilePost(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0);

        /// <summary>
        /// Perform AI phishing detection and classification on an input image or document (PDF or DOCX).  Analyzes input content as well as embedded URLs with AI deep learnign to detect phishing and other unsafe content.  Uses 100-125 API calls depending on model selected.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model">Model to use; default setting is Advanced (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PhishingDetectionResponse</returns>
        ApiResponse<PhishingDetectionResponse> PhishingDetectFilePostWithHttpInfo(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0);
        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learnign to detect spam, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected.
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PhishingDetectionAdvancedResponse</returns>
        PhishingDetectionAdvancedResponse PhishingDetectTextStringAdvancedPost(PhishingDetectionAdvancedRequest body = default(PhishingDetectionAdvancedRequest), int operationIndex = 0);

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learnign to detect spam, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PhishingDetectionAdvancedResponse</returns>
        ApiResponse<PhishingDetectionAdvancedResponse> PhishingDetectTextStringAdvancedPostWithHttpInfo(PhishingDetectionAdvancedRequest body = default(PhishingDetectionAdvancedRequest), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPhishingDetectionApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Perform advanced AI phishing detection and classification against input email.  Analyzes input email as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PhishingDetectionEmailAdvancedResponse</returns>
        System.Threading.Tasks.Task<PhishingDetectionEmailAdvancedResponse> PhishingDetectEmailAdvancedPostAsync(AdvancedEmailDetectionRequest body = default(AdvancedEmailDetectionRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input email.  Analyzes input email as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PhishingDetectionEmailAdvancedResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<PhishingDetectionEmailAdvancedResponse>> PhishingDetectEmailAdvancedPostWithHttpInfoAsync(AdvancedEmailDetectionRequest body = default(AdvancedEmailDetectionRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model"> (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PhishingDetectionAdvancedResponse</returns>
        System.Threading.Tasks.Task<PhishingDetectionAdvancedResponse> PhishingDetectFileAdvancedPostAsync(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model"> (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PhishingDetectionAdvancedResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<PhishingDetectionAdvancedResponse>> PhishingDetectFileAdvancedPostWithHttpInfoAsync(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Perform AI phishing detection and classification on an input image or document (PDF or DOCX).  Analyzes input content as well as embedded URLs with AI deep learnign to detect phishing and other unsafe content.  Uses 100-125 API calls depending on model selected.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model">Model to use; default setting is Advanced (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PhishingDetectionResponse</returns>
        System.Threading.Tasks.Task<PhishingDetectionResponse> PhishingDetectFilePostAsync(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Perform AI phishing detection and classification on an input image or document (PDF or DOCX).  Analyzes input content as well as embedded URLs with AI deep learnign to detect phishing and other unsafe content.  Uses 100-125 API calls depending on model selected.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model">Model to use; default setting is Advanced (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PhishingDetectionResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<PhishingDetectionResponse>> PhishingDetectFilePostWithHttpInfoAsync(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learnign to detect spam, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PhishingDetectionAdvancedResponse</returns>
        System.Threading.Tasks.Task<PhishingDetectionAdvancedResponse> PhishingDetectTextStringAdvancedPostAsync(PhishingDetectionAdvancedRequest body = default(PhishingDetectionAdvancedRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learnign to detect spam, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected.
        /// </summary>
        /// <remarks>
        /// 
        /// </remarks>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PhishingDetectionAdvancedResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<PhishingDetectionAdvancedResponse>> PhishingDetectTextStringAdvancedPostWithHttpInfoAsync(PhishingDetectionAdvancedRequest body = default(PhishingDetectionAdvancedRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPhishingDetectionApi : IPhishingDetectionApiSync, IPhishingDetectionApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class PhishingDetectionApi : IPhishingDetectionApi
    {
        private Cloudmersive.APIClient.NET.Phishing.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="PhishingDetectionApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PhishingDetectionApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PhishingDetectionApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PhishingDetectionApi(string basePath)
        {
            this.Configuration = Cloudmersive.APIClient.NET.Phishing.Client.Configuration.MergeConfigurations(
                Cloudmersive.APIClient.NET.Phishing.Client.GlobalConfiguration.Instance,
                new Cloudmersive.APIClient.NET.Phishing.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Cloudmersive.APIClient.NET.Phishing.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Cloudmersive.APIClient.NET.Phishing.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Cloudmersive.APIClient.NET.Phishing.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PhishingDetectionApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public PhishingDetectionApi(Cloudmersive.APIClient.NET.Phishing.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Cloudmersive.APIClient.NET.Phishing.Client.Configuration.MergeConfigurations(
                Cloudmersive.APIClient.NET.Phishing.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Cloudmersive.APIClient.NET.Phishing.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Cloudmersive.APIClient.NET.Phishing.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Cloudmersive.APIClient.NET.Phishing.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PhishingDetectionApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public PhishingDetectionApi(Cloudmersive.APIClient.NET.Phishing.Client.ISynchronousClient client, Cloudmersive.APIClient.NET.Phishing.Client.IAsynchronousClient asyncClient, Cloudmersive.APIClient.NET.Phishing.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Cloudmersive.APIClient.NET.Phishing.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Cloudmersive.APIClient.NET.Phishing.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Cloudmersive.APIClient.NET.Phishing.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Cloudmersive.APIClient.NET.Phishing.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Cloudmersive.APIClient.NET.Phishing.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input email.  Analyzes input email as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PhishingDetectionEmailAdvancedResponse</returns>
        public PhishingDetectionEmailAdvancedResponse PhishingDetectEmailAdvancedPost(AdvancedEmailDetectionRequest body = default(AdvancedEmailDetectionRequest), int operationIndex = 0)
        {
            Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionEmailAdvancedResponse> localVarResponse = PhishingDetectEmailAdvancedPostWithHttpInfo(body);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input email.  Analyzes input email as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PhishingDetectionEmailAdvancedResponse</returns>
        public Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionEmailAdvancedResponse> PhishingDetectEmailAdvancedPostWithHttpInfo(AdvancedEmailDetectionRequest body = default(AdvancedEmailDetectionRequest), int operationIndex = 0)
        {
            Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions localVarRequestOptions = new Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json",
                "text/json",
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = body;

            localVarRequestOptions.Operation = "PhishingDetectionApi.PhishingDetectEmailAdvancedPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Apikey")))
            {
                localVarRequestOptions.HeaderParameters.Add("Apikey", this.Configuration.GetApiKeyWithPrefix("Apikey"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<PhishingDetectionEmailAdvancedResponse>("/phishing/detect/email/advanced", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PhishingDetectEmailAdvancedPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input email.  Analyzes input email as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PhishingDetectionEmailAdvancedResponse</returns>
        public async System.Threading.Tasks.Task<PhishingDetectionEmailAdvancedResponse> PhishingDetectEmailAdvancedPostAsync(AdvancedEmailDetectionRequest body = default(AdvancedEmailDetectionRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionEmailAdvancedResponse> localVarResponse = await PhishingDetectEmailAdvancedPostWithHttpInfoAsync(body, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input email.  Analyzes input email as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PhishingDetectionEmailAdvancedResponse)</returns>
        public async System.Threading.Tasks.Task<Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionEmailAdvancedResponse>> PhishingDetectEmailAdvancedPostWithHttpInfoAsync(AdvancedEmailDetectionRequest body = default(AdvancedEmailDetectionRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions localVarRequestOptions = new Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json", 
                "text/json", 
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = body;

            localVarRequestOptions.Operation = "PhishingDetectionApi.PhishingDetectEmailAdvancedPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Apikey")))
            {
                localVarRequestOptions.HeaderParameters.Add("Apikey", this.Configuration.GetApiKeyWithPrefix("Apikey"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<PhishingDetectionEmailAdvancedResponse>("/phishing/detect/email/advanced", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PhishingDetectEmailAdvancedPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model"> (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PhishingDetectionAdvancedResponse</returns>
        public PhishingDetectionAdvancedResponse PhishingDetectFileAdvancedPost(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0)
        {
            Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionAdvancedResponse> localVarResponse = PhishingDetectFileAdvancedPostWithHttpInfo(model, inputFile);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model"> (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PhishingDetectionAdvancedResponse</returns>
        public Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionAdvancedResponse> PhishingDetectFileAdvancedPostWithHttpInfo(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0)
        {
            Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions localVarRequestOptions = new Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (model != null)
            {
                localVarRequestOptions.HeaderParameters.Add("model", Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.ParameterToString(model)); // header parameter
            }
            if (inputFile != null)
            {
                localVarRequestOptions.FileParameters.Add("inputFile", inputFile);
            }

            localVarRequestOptions.Operation = "PhishingDetectionApi.PhishingDetectFileAdvancedPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Apikey")))
            {
                localVarRequestOptions.HeaderParameters.Add("Apikey", this.Configuration.GetApiKeyWithPrefix("Apikey"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<PhishingDetectionAdvancedResponse>("/phishing/detect/file/advanced", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PhishingDetectFileAdvancedPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model"> (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PhishingDetectionAdvancedResponse</returns>
        public async System.Threading.Tasks.Task<PhishingDetectionAdvancedResponse> PhishingDetectFileAdvancedPostAsync(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionAdvancedResponse> localVarResponse = await PhishingDetectFileAdvancedPostWithHttpInfoAsync(model, inputFile, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learning to detect phishing, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model"> (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PhishingDetectionAdvancedResponse)</returns>
        public async System.Threading.Tasks.Task<Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionAdvancedResponse>> PhishingDetectFileAdvancedPostWithHttpInfoAsync(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions localVarRequestOptions = new Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (model != null)
            {
                localVarRequestOptions.HeaderParameters.Add("model", Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.ParameterToString(model)); // header parameter
            }
            if (inputFile != null)
            {
                localVarRequestOptions.FileParameters.Add("inputFile", inputFile);
            }

            localVarRequestOptions.Operation = "PhishingDetectionApi.PhishingDetectFileAdvancedPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Apikey")))
            {
                localVarRequestOptions.HeaderParameters.Add("Apikey", this.Configuration.GetApiKeyWithPrefix("Apikey"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<PhishingDetectionAdvancedResponse>("/phishing/detect/file/advanced", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PhishingDetectFileAdvancedPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Perform AI phishing detection and classification on an input image or document (PDF or DOCX).  Analyzes input content as well as embedded URLs with AI deep learnign to detect phishing and other unsafe content.  Uses 100-125 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model">Model to use; default setting is Advanced (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PhishingDetectionResponse</returns>
        public PhishingDetectionResponse PhishingDetectFilePost(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0)
        {
            Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionResponse> localVarResponse = PhishingDetectFilePostWithHttpInfo(model, inputFile);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Perform AI phishing detection and classification on an input image or document (PDF or DOCX).  Analyzes input content as well as embedded URLs with AI deep learnign to detect phishing and other unsafe content.  Uses 100-125 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model">Model to use; default setting is Advanced (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PhishingDetectionResponse</returns>
        public Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionResponse> PhishingDetectFilePostWithHttpInfo(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0)
        {
            Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions localVarRequestOptions = new Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (model != null)
            {
                localVarRequestOptions.HeaderParameters.Add("model", Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.ParameterToString(model)); // header parameter
            }
            if (inputFile != null)
            {
                localVarRequestOptions.FileParameters.Add("inputFile", inputFile);
            }

            localVarRequestOptions.Operation = "PhishingDetectionApi.PhishingDetectFilePost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Apikey")))
            {
                localVarRequestOptions.HeaderParameters.Add("Apikey", this.Configuration.GetApiKeyWithPrefix("Apikey"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<PhishingDetectionResponse>("/phishing/detect/file", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PhishingDetectFilePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Perform AI phishing detection and classification on an input image or document (PDF or DOCX).  Analyzes input content as well as embedded URLs with AI deep learnign to detect phishing and other unsafe content.  Uses 100-125 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model">Model to use; default setting is Advanced (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PhishingDetectionResponse</returns>
        public async System.Threading.Tasks.Task<PhishingDetectionResponse> PhishingDetectFilePostAsync(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionResponse> localVarResponse = await PhishingDetectFilePostWithHttpInfoAsync(model, inputFile, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Perform AI phishing detection and classification on an input image or document (PDF or DOCX).  Analyzes input content as well as embedded URLs with AI deep learnign to detect phishing and other unsafe content.  Uses 100-125 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="model">Model to use; default setting is Advanced (optional, default to &quot;Advanced&quot;)</param>
        /// <param name="inputFile"> (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PhishingDetectionResponse)</returns>
        public async System.Threading.Tasks.Task<Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionResponse>> PhishingDetectFilePostWithHttpInfoAsync(string model = default(string), System.IO.Stream inputFile = default(System.IO.Stream), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions localVarRequestOptions = new Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "multipart/form-data"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (model != null)
            {
                localVarRequestOptions.HeaderParameters.Add("model", Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.ParameterToString(model)); // header parameter
            }
            if (inputFile != null)
            {
                localVarRequestOptions.FileParameters.Add("inputFile", inputFile);
            }

            localVarRequestOptions.Operation = "PhishingDetectionApi.PhishingDetectFilePost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Apikey")))
            {
                localVarRequestOptions.HeaderParameters.Add("Apikey", this.Configuration.GetApiKeyWithPrefix("Apikey"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<PhishingDetectionResponse>("/phishing/detect/file", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PhishingDetectFilePost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learnign to detect spam, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PhishingDetectionAdvancedResponse</returns>
        public PhishingDetectionAdvancedResponse PhishingDetectTextStringAdvancedPost(PhishingDetectionAdvancedRequest body = default(PhishingDetectionAdvancedRequest), int operationIndex = 0)
        {
            Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionAdvancedResponse> localVarResponse = PhishingDetectTextStringAdvancedPostWithHttpInfo(body);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learnign to detect spam, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PhishingDetectionAdvancedResponse</returns>
        public Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionAdvancedResponse> PhishingDetectTextStringAdvancedPostWithHttpInfo(PhishingDetectionAdvancedRequest body = default(PhishingDetectionAdvancedRequest), int operationIndex = 0)
        {
            Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions localVarRequestOptions = new Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json",
                "text/json",
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            var localVarMultipartFormData = localVarContentType == "multipart/form-data";
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = body;

            localVarRequestOptions.Operation = "PhishingDetectionApi.PhishingDetectTextStringAdvancedPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Apikey")))
            {
                localVarRequestOptions.HeaderParameters.Add("Apikey", this.Configuration.GetApiKeyWithPrefix("Apikey"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<PhishingDetectionAdvancedResponse>("/phishing/detect/text-string/advanced", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PhishingDetectTextStringAdvancedPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learnign to detect spam, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PhishingDetectionAdvancedResponse</returns>
        public async System.Threading.Tasks.Task<PhishingDetectionAdvancedResponse> PhishingDetectTextStringAdvancedPostAsync(PhishingDetectionAdvancedRequest body = default(PhishingDetectionAdvancedRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionAdvancedResponse> localVarResponse = await PhishingDetectTextStringAdvancedPostWithHttpInfoAsync(body, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Perform advanced AI phishing detection and classification against input text string.  Analyzes input content as well as embedded URLs with AI deep learnign to detect spam, phishing and other unsafe content.  Uses 25-100 API calls depending on model selected. 
        /// </summary>
        /// <exception cref="Cloudmersive.APIClient.NET.Phishing.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="body">Phishing detection request (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PhishingDetectionAdvancedResponse)</returns>
        public async System.Threading.Tasks.Task<Cloudmersive.APIClient.NET.Phishing.Client.ApiResponse<PhishingDetectionAdvancedResponse>> PhishingDetectTextStringAdvancedPostWithHttpInfoAsync(PhishingDetectionAdvancedRequest body = default(PhishingDetectionAdvancedRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions localVarRequestOptions = new Cloudmersive.APIClient.NET.Phishing.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json", 
                "text/json", 
                "application/*+json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "text/plain",
                "application/json",
                "text/json"
            };

            var localVarContentType = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Cloudmersive.APIClient.NET.Phishing.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = body;

            localVarRequestOptions.Operation = "PhishingDetectionApi.PhishingDetectTextStringAdvancedPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Apikey")))
            {
                localVarRequestOptions.HeaderParameters.Add("Apikey", this.Configuration.GetApiKeyWithPrefix("Apikey"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<PhishingDetectionAdvancedResponse>("/phishing/detect/text-string/advanced", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PhishingDetectTextStringAdvancedPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
